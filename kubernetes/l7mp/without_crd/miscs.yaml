# Base: https://github.com/l7mp/rtpengine-k8s-l7mp-test/blob/master/kubernetes/rtpengine-worker.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: l7mp-worker-config
data:
  l7mp-worker.yaml: |
    # Controller listening on 1234, plus some useful debug clusters
    admin:
      log_level: info
      log_file: stdout
      access_log_path: /tmp/admin_access.log
    listeners:
      - name: controller-listener-admin
        spec: { protocol: HTTP, port: 1234 }
        rules:
          - action:
              route:
                destination:
                  spec: { protocol: L7mpController }
                retry:
                  retry_on: always
                  num_retries: 10
                  timeout: 500
      - name: worker-rtp-listener
        spec:
          protocol: JSONSocket
          transport: { protocol: UDP, port: 19000 }
        rules: worker-rtp-rulelist
        options:
          track: 3600 # 1 hour
      - name: worker-rtcp-listener
        spec:
          protocol: JSONSocket
          transport: { protocol: UDP, port: 19001 }
        rules: worker-rtcp-rulelist
        options:
          track: 3600 # 1 hour
    rulelists:
      - name: worker-rtp-rulelist
        rules: []
      - name: worker-rtcp-rulelist
        rules: []
    clusters:
      - name: ingress-metric-counter
        spec: { protocol: Metric }
      - name: egress-metric-counter
        spec: { protocol: Metric }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: l7mp-sidecar-config
data:
  l7mp-sidecar.yaml: |
    # Controller listening on 1234, plus some useful debug clusters
    admin:
      log_level: info
      log_file: stdout
      access_log_path: /tmp/admin_access.log
    listeners:
      - name: controller-listener-admin
        spec: { protocol: HTTP, port: 1234 }
        rules:
          - action:
              route:
                destination:
                  spec: { protocol: L7mpController }
                retry:
                  retry_on: always
                  num_retries: 10
                  timeout: 500
    clusters:
      - name: ingress-metric-counter
        spec: { protocol: Metric }
      - name: egress-metric-counter
        spec: { protocol: Metric }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rtpengine-config
  namespace: default
data:
  rtpengine.conf: |
    [rtpengine]
    # access only via the sidecar proxy
    # listen-ng=MY_IP:22222
    # interface=MY_IP
    listen-tcp-ng=127.0.0.1:22222
    interface=127.0.0.1

    foreground=true
    log-stderr=true

    port-min=10000
    port-max=20000

    # recording-dir=/tmp
    # recording-method=pcap
    # recording-format=eth

    log-level=6
    delete-delay=0

    timeout=6000

    redis = redis:6379/1
    subscribe-keyspace=1
    # redis-write = password@12.23.34.45:6379/42
    # redis-num-threads = 8
    # no-redis-required = false
    # redis-expires = 86400
    # redis-allowed-errors = -1
    # redis-disable-time = 10
    # redis-cmd-timeout = 0
    # redis-connect-timeout = 1000

    # sip-source = falsecontrol-worker
    # dtls-passive = false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
data:
  redis-config: |
    notify-keyspace-events KEA
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: controller-config
data:
  config.conf: |
    [controller]
    protocol=tcp
    rtpe_address=l7mp-worker
    rtpe_port=22220
    envoy_address=127.0.0.1
    envoy_port=1234
    local_address=0.0.0.0
    local_port=2000
    sidecar_type=l7mp
    envoy_operator=no
    update_owners=no
    udp_mode=server
    without_operator=yes
# ---
# apiVersion: l7mp.io/v1
# kind: Target
# metadata:
#     name: ingress-rtp-target
# spec:
#   selector: 
#     matchLabels: 
#       app: l7mp-ingress
#   cluster:
#     spec:
#       JSONSocket:
#         transport:
#           UDP:
#             port: 19000
#         header:
#           - path:
#               from: '/labels'
#               to: '/labels'
#     endpoints:
#       - selector:
#           matchLabels:
#             app: l7mp-worker
#     loadbalancer:
#       policy: ConsistentHash
#       key: '/labels/callid'
# ---
# apiVersion: l7mp.io/v1
# kind: Target
# metadata:
#     name: ingress-rtcp-target
# spec:
#   selector: 
#     matchLabels: 
#       app: l7mp-ingress
#   cluster:
#     spec:
#       JSONSocket:
#         transport:
#           UDP:
#             port: 19001
#         header:
#           - path:
#               from: '/labels'
#               to: '/labels'
#     endpoints:
#       - selector:
#           matchLabels:
#             app: l7mp-worker
#     loadbalancer:
#       policy: ConsistentHash
#       key: '/labels/callid'
# ---
# apiVersion: l7mp.io/v1
# kind: VirtualService
# metadata:
#   name: ingress-controller-listener
# spec:
#   selector:
#     matchLabels:
#       app: l7mp-ingress
#   listener:
#     spec:
#       TCP:
#         port: 22222
#     rules:
#       - action:
#           route:
#             destinationRef: /l7mp.io/v1/Target/default/ingress-controller-target
# ---
# apiVersion: l7mp.io/v1
# kind: Target
# metadata:
#   name: ingress-controller-target
# spec:
#   selector:
#     matchLabels:
#       app: l7mp-ingress
#   cluster:
#     spec:
#       TCP:
#         port: 2000
#     endpoints:
#       - selector: 
#           matchLabels:
#             app: rtpe-controller
# ---
# apiVersion: l7mp.io/v1
# kind: VirtualService
# metadata:
#   name: worker-ng-listener
# spec:
#   selector:
#     matchLabels:
#       app: l7mp-worker
#   listener:
#     spec:
#       TCP:
#         port: 22220
#     rules:
#       - action:
#           route:
#             destinationRef: /l7mp.io/v1/Target/default/worker-ng-target
# ---
# apiVersion: l7mp.io/v1
# kind: Target
# metadata:
#   name: worker-ng-target
# spec:
#   selector:
#     matchLabels:
#       app: l7mp-worker
#   cluster:
#     spec:
#       TCP:
#         port: 22222
#     endpoints:
#       - {spec: {address: "127.0.0.1" }}


# apiVersion: l7mp.io/v1
# kind: VirtualService
# metadata:
#   name: test-listener
# spec:
#   selector:
#     matchLabels:
#       app: l7mp-ingress
#   listener:
#     spec:
#       TCP:
#         port: 22220
#     rules:
#       - action:
#           route:
#             destinationRef: /l7mp.io/v1/Target/default/ingress-controller-target